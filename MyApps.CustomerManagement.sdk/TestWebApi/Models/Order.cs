// Code generated by Microsoft (R) AutoRest Code Generator 0.9.6.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using MyApps.CustomerManagement.sdk.Models;
using Newtonsoft.Json.Linq;

namespace MyApps.CustomerManagement.sdk.Models
{
    public partial class Order
    {
        private IList<Article> _articles;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Article> Articles
        {
            get { return this._articles; }
            set { this._articles = value; }
        }
        
        private int? _customerId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? CustomerId
        {
            get { return this._customerId; }
            set { this._customerId = value; }
        }
        
        private DateTimeOffset? _orderDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? OrderDate
        {
            get { return this._orderDate; }
            set { this._orderDate = value; }
        }
        
        private int? _orderId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? OrderId
        {
            get { return this._orderId; }
            set { this._orderId = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Order class.
        /// </summary>
        public Order()
        {
            this.Articles = new LazyList<Article>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken articlesSequence = ((JToken)inputObject["Articles"]);
                if (articlesSequence != null && articlesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken articlesValue in ((JArray)articlesSequence))
                    {
                        Article article = new Article();
                        article.DeserializeJson(articlesValue);
                        this.Articles.Add(article);
                    }
                }
                JToken customerIdValue = inputObject["CustomerId"];
                if (customerIdValue != null && customerIdValue.Type != JTokenType.Null)
                {
                    this.CustomerId = ((int)customerIdValue);
                }
                JToken orderDateValue = inputObject["OrderDate"];
                if (orderDateValue != null && orderDateValue.Type != JTokenType.Null)
                {
                    this.OrderDate = ((DateTimeOffset)orderDateValue);
                }
                JToken orderIdValue = inputObject["OrderId"];
                if (orderIdValue != null && orderIdValue.Type != JTokenType.Null)
                {
                    this.OrderId = ((int)orderIdValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Order
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            JArray articlesSequence = null;
            if (this.Articles != null)
            {
                if (this.Articles is ILazyCollection<Article> == false || ((ILazyCollection<Article>)this.Articles).IsInitialized)
                {
                    articlesSequence = new JArray();
                    outputObject["Articles"] = articlesSequence;
                    foreach (Article articlesItem in this.Articles)
                    {
                        if (articlesItem != null)
                        {
                            articlesSequence.Add(articlesItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.CustomerId != null)
            {
                outputObject["CustomerId"] = this.CustomerId.Value;
            }
            if (this.OrderDate != null)
            {
                outputObject["OrderDate"] = this.OrderDate.Value;
            }
            if (this.OrderId != null)
            {
                outputObject["OrderId"] = this.OrderId.Value;
            }
            return outputObject;
        }
    }
}
